{
  "name": "Mq-docker",
  "tagline": "A sample demonstrating how to build an MQ Broker docker image containing the RTVS MQ Exit for message interception",
  "body": "# mq-docker\r\nA sample demonstrating how to build an MQ Broker docker image containing the RTVS MQ Exit for message interception.\r\n\r\nThis example is an adapted version taken from [ibm-messaging](https://github.com/ibm-messaging/mq-docker).\r\n\r\n# Steps\r\n\r\n1\\. Clone the example\r\n```\r\ngit clone https://github.com/ibm-rtvs/mq-docker.git\r\n```\r\n2\\. Make changes as necessary\r\n\r\n3\\. Build the image\r\n```\r\ncd mq-docker\r\nwget http://localhost:7819/RTCP/rest/tools/IBM/WebSphereMQ/dist/IBMWebSphereMQdist.zip\r\ndocker build -t mq-docker .\r\n```\r\n4\\. Execute the image\r\n```\r\ndocker run -d -e LICENSE=accept -e MQ_QMGR_NAME=QM1 -p 1414:1414 mq-docker\r\n```\r\n\r\nYou now have a running IBM MQ Broker with Intercept installed.\r\n\r\n#Connection details\r\nThe default configured connection details are:\r\n\r\n* Host: ```$(docker-machine ip)```\r\n* Queue Manager: ```QM1```\r\n* Port: ```1414```\r\n* Channel: ```SYSTEM.DEF.SVRCONN```\r\n* Username: ```alice```\r\n* Password: ```passw0rd```\r\n* Queue: ```sample```\r\n\r\nYou should configure MQ transports used by IBM Rational Integration Tester to use **Dynamic Queues** in both **Recording** and **Stubbing** tabs to enable message interception.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}